version: "3.8"
services:
  frontend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./dockerfile/local/frontend/Dockerfile
    container_name: frontend
    env_file:
      - .env
    volumes:
      - ./:/frontend:delegated
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - net
  django:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./dockerfile/local/django/Dockerfile
    command: /start
    container_name: backend
    env_file:
      - .env
    volumes:
      - .:/django
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    networks:
      - net
  # couchserver:
  #   image: couchdb
  #   restart: always
  #   container_name: couchserver
  #   ports:
  #     - "5984:5984"
  #   environment:
  #     - COUCHDB_USER=${COUCHDB_USER}
  #     - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
  #   volumes:
  #     - couch-data:/opt/couchdb/data
  postgres:
    restart: unless-stopped
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    # env_file:
    #   - .env
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_DB}
    ports:
      - "5434:5432"
    networks:
      - net
  pgadmin:
    restart: on-failure
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASS}
    ports:
      - "5050:80"
    networks:
      - net
networks:
  net:
    driver: bridge
volumes:
  postgres-data: null
  pgadmin-data: null